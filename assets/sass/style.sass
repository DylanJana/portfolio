@mixin heading-shadow {
    text-shadow: .55rem .55rem #15DEA5;
}

.form {
    &__heading {
        @include heading-shadow;
    }
}

.about {
    &__heading {
        @include heading-shadow;
    }
}

.project {
    &__heading {
        @include heading-shadow;
    }
}

/* Résultat CSS */
.form_heading {
    text-shadow: .55rem .55rem #15DEA5;
}

.about_heading {
    text-shadow: .55rem .55rem #15DEA5;
}

.project_heading {
    text-shadow: .55rem .55rem #15DEA5;
}

/* Mixin + (argument) Étape 1*/
@mixing heading-shadow($colour) {
    text-shadow: .55rem .55rem #15DEA5;
}

/* Mixin + (argument) Étape 2*/
@mixing heading-shadow($colour) {
    text-shadow: .55rem .55rem $colour;
}

/* Application de la mixin Étape 3*/
.heading {
    &__header {
        @include heading-shadow(#fff);
    }
}

/* Résultat CSS */
.heading__header {
    text-shadow: .55rem .55rem #fff;
}

/* Mixin + (argument : argument par défaut si je ne spécifie pas une couleur)*/
@mixing heading-shadow($colour: $color-primary) {
    text-shadow: .55rem .55rem $colour;
}

/* Sass Final */
.heading {
    &__header {
        @include heading-shadow($color-white);
    }
}

.form {
    &__heading {
        @include heading-shadow;
    }
}

.about {
    &__heading {
        @include heading-shadow;
    }
}

.project {
    &__heading {
        @include heading-shadow;
    }
}

/* CSS Final une fois compilé */
.heading__header {
    text-shadow: .55rem .55rem #fff;
}

.form__heading {
    text-shadow: .55rem .55rem #15DEA5;
}

.about__heading {
    text-shadow: .55rem .55rem #15DEA5;
}

.project__heading {
    text-shadow: .55rem .55rem #15DEA5;
}

/* Variable pour la taille fixe de l'ombre de text-shadow .55rem */
$heading-shadow-size: 0.55rem;

/* Dans la mixin j'applique $heading-shadow-size en taille par défaut */
@mixin heading-shadow($color: $color-primary, $shadow-size: $heading-shadow-size) {
    text-shadow: $shadow-size solid $colour; 
}

/*** Les Extensions ***/
/* J'inscris des propriétés dans une classe CSS */
.typography {
    color: $color-primary;
    font-size: 2rem;
    font-weight: 100;
    line-height: 1.7
}

/* Grâce aux extensions j'applique toutes les propriétés de la classe CSS .typography à un autre sélecteur 
grâce à @extend .typography*/

h1 {
    @extend .typography
}

/* La meilleure façon d'utiliser les extensions et d'éviter qu'un sélecteur qui ne se retrouve nulle part
dans le CSS soit présent dans mon css est d'utilise le prefixe pourcentage */
%typography {
    color: $color-primary;
    font-size: 2rem;
    font-weight: 100;
    line-height: 1.7
}

/*** Fonctions ***/
/* Assombrir de 10 % la variable $colour */
@mixin heading-shadow($colour: $colour-primary, $size: $heading-shadow-size) {
    text-shadow : $size $size darken($colour, 10%);
}

/* CSS obtenu */
.form__heading {
    text-shadow: 0.55rem 0.55rem #11af82; /* #11af82 correspond à la couleur $colour 10% plus sombre */
}

/*** Conditions ***/
@if ( lightness($colour) < 25%) {
    $colour: lighten($colour, 10%);
}@else {
    $colour: darken($colour, 10%);
}

/* Intégration de la condition dans la Mixin */
@mixin heading-shadow($colour: $colour-primary, $size: $heading-shadow-size) {
    @if(lightness($colour) < 25%) {
        $colour: lighten($colour, 10%);
    }@else {
        $colour: darken($colour, 10%);
    }

    text-shadow: $size $size $colour;
}

/* Exemple d'application */
.form {
    &__heading {
        @include heading-shadow($colour-secondary);
    }
}

/* Résultat en CSS */
.form__heading {
    text-shadow: 0.55rem 0.55rem @002a67;
}

/*** Fonctions ***/
@function lightness-shift($colour) {
    @if (lightness($colour) < 25% ) {
        @return lighten($colour, 10%);
    } @else {
        @return darken($colour, 10%);
    }
}

/* J'intégre ma fonction dans ma mixin */
@mixin heading-shadow($colour: lightness-shift($colour-primary), $size: $heading-shadow-size) {
    color: $colour;
    text-shadow: $size $size $colour;
}

/* Réponse exercice */
$color-primary: #15DEA5;
$color-accent: #FFF;

@function pastel($clr) {
  $hue: hue($clr);
  $sat: 100%;
  $light: 90%;
  $pastel: hsl($hue, $sat, $light);
  @return $pastel;
}
.btn {
  cursor: pointer;
  padding: 1.5rem 3rem;
  border-radius: 10rem;
  font-size: 2rem;
  font-family: 'Montserrat', sans-serif;
  font-weight: 900;
  font-style: italic;
  color: $color-accent;
  background: $color-primary;
  &:hover {
    background-color: pastel($color-primary);
    color: $color-primary;
  }
}